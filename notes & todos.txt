Version 1.1
-----------  
- VS2010 parser
- Auto-detect VS version from the .sln file  
- Ability to add or suppress compiler flags
- Projects with property sheets, and inherited properties
- Make path to cygwin configurable for the tester
- Output target names might not be the same as project names.
- 32-bit vs 64-bit generation?
- Config option to suppress checking in current folder for dlls. 


Version 1.2
-----------
- Custom build steps
- Pre / post build steps
- Allow change to folder prefix "gcc" (maybe v 1.2) 


Version 2.0
-----------
- C# / mono


WIKI
----
- Notes on #ifdef stuff for dlls
- Notes on the code
  - Notes on cygwin install for testings


QUESTIONS
---------
  

BUGS
----
- OnDemandPriceLogger: fails with 'Value cannot be null'


C# / Mono
---------
Things we need for C# makefiles:
Y - List of .cs files
- List of references
  - List of library paths (do we need these if we have complete paths to references?)
  - Note: they may be different for Release and Debug configurations
Y - Debug and release flags
Y   - Debug_FLAGS = -warn:4 -warnaserror+ -nowarn:1701,1702 -debug+ -debug:full -filealign:512 -pkg:dotnet -define:DEBUG -define:TRACE -optimize-   
Y   - Release_FLAGS = -warn:4 -warnaserror+ -nowarn:1701,1702 -filealign:512 -pkg:dotnet -define:TRACE -optimize+ 
Y  - Parse project for:
Y    - Warning level
Y    - Ignore warnings
Y    - Treat warnings as errors
Y    - Defines(?)
Y - Output path
- Project type (library, exe, winexe)    

- Properties

  Name								Value
  ----                              -----
Y  "Optimize"						true/false
Y  "OutputPath"						"bin\Debug"
Y  "TreatWarningsAsErrors"			true/false
Y  "DefineConstants"					"DEBUG;TRACE"
Y  "DebugSymbols"					true/false
Y  "NoWarn"							"" (format?)
Y  "DebugInfo"						"full"
Y  "FileAlignment"					512
Y  "WarningLevel"					4
  
  
